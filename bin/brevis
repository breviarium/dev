#!/usr/bin/env node

import program from 'commander';
import { version } from '../../package';
import brevis from 'brevis-core';
import { resolve } from 'path';

import preset2015 from 'babel-preset-es2015';
import syntaxAsync from 'babel-plugin-syntax-async-functions';
import transformAsync from 'babel-plugin-transform-async-to-generator';
import transformRuntime from 'babel-plugin-transform-runtime';
import alias from 'babel-plugin-module-alias';

program
    .version(version)
    .option('-p, --port <port>', 'Port to listen on (3000)', parseInt)
    .option('-n, --no-babel', 'Skip Babel transformation')
    .parse(process.argv);

let file = program.args[program.args.length - 1];

if (!file) {
    console.error(`\n> \u001b[31mError!\u001b[39m Please supply a file.`);
    program.outputHelp();
    process.exit(1);
}

if ('/' !== file[0]) {
    file = resolve(process.cwd(), file);
}

if (program.babel) {
    const path = require.resolve('babel-runtime/package').replace(/[\\\/]package.json$/, '');
    require('babel-register')({
        presets: [preset2015],
        plugins: [
            syntaxAsync,
            transformAsync,
            transformRuntime,
            [ alias, [ { src: path, expose: 'babel-runtime' } ] ]
        ]
    });
}

const mod = require(file).default;

if ('function' !== typeof mod) {
    console.error(`> \u001b[31mError!\u001b[39m "${file}" does not export a function.`);
    process.exit(1);
}

const port = program.port || 3000;
brevis(mod).listen(port, (err) => {
    if (err) {
        console.error(err.stack);
        process.exit(1);
    }
    console.log(`> \u001b[96mReady!\u001b[39m Listening on ${port}.`);
});
